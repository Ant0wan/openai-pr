name: Python

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - '**.txt'
      - '**.yml'
      - '**.conf'
    tags:
      - '*'
  pull_request:
    branches:
      - main

permissions: write-all

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - linter: pylint
            cmd: pylint --ignore=src/tests
            python-version: 3.11
          - linter: pycodestyle
            cmd: pycodestyle --show-source --show-pep8 --exclude=src/tests
            python-version: 3.11
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install --upgrade pip
      - run: pip install -r requirements.txt
      - run: pip install ${{ matrix.linter }}
      - run: ${{ matrix.cmd }} src/**
  requirements:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -r requirements.txt
  tests:
    needs: [lint, requirements]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -r requirements.txt
      - run: python -m unittest discover -s tests -p 'test_*.py'
        working-directory: src/
        env:
          ENV_VAR_1: value1
          ENV_VAR_2: value2
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  note:
      #    needs: [lint, requirements, tests]
      #    if: startsWith(github.ref, 'refs/tags/')
      #    runs-on: ubuntu-latest
      #    env:
      #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    steps:
      #    - uses: actions/checkout@v3
      #    - run: gh release create ${GITHUB_REF#refs/*/} --generate-notes
      #  release:
      #    needs: [lint, requirements, note]
      #    if: startsWith(github.ref, 'refs/tags/')
      #    runs-on: ubuntu-latest
      #    env:
      #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    steps:
      #    - uses: actions/checkout@v3
      #    - run: gh release upload ${GITHUB_REF#refs/*/} openai-pr
